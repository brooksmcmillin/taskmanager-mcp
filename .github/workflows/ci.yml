name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mypy types-requests

    - name: Run security checks with bandit
      run: |
        bandit -r *.py -f json -o bandit-report.json || true
        bandit -r *.py --severity-level medium --confidence-level medium

    - name: Run dependency vulnerability scan with safety
      run: |
        safety scan --json --output safety-report.json || true
        safety scan

    - name: Run advanced security analysis with semgrep
      run: |
        semgrep --config=auto --json --output=semgrep-report.json *.py || true
        semgrep --config=auto --error *.py

    - name: Run mypy type checking
      run: |
        mypy --config-file mypy.ini *.py

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short

    - name: Generate test coverage report
      run: |
        pytest tests/ --cov=. --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov (optional)
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false